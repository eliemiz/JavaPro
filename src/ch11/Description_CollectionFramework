
Collections Framework
 - 객체들을 효율적으로 추가, 삭제, 검색할 수 있도록 제공되는 컬렉션 라이브러리
 - java.util 패키지에 포함
 - 인터페이스를 통해서 정형화된 방법으로 다양한 컬렉션 클래스 이용

Collection
List - ArrayList - Vector
Set - HashSet - TreeSet
Map - HashMap - HashTable - TreeMap
...

List : 저장되는 순서가 유지되어 저장됨. 중복 저장 가능
Set : 저장되는 순서 유지가 안됨, 중복 저장 불가
Map : 객체 수집 시 키와 값의 쌍으로 저장, 키 값 중복 불가

List
 - List 인터페이스를 구현한 구현 클래스들의 객체
 - 저장하는 순서 그대로 유지하기 때문에 인덱스를 통해서 원하는 객체 검색 가능
 - 가별 배열
 - ArrayList, Vector, LinkedList
 - List 주요 메소드 : add(), set(), contains() get(), indexOf(), clear(), remove()
 
Set
 - 중복을 허용하지 않음
 - 저장 순서가 유지되지 않음
 - HashSet, LinkedHashSet, TreeSet
 - Set 주요 메소드 : add(), contains(), isEmpty(), clear(), remove()
 
HashSet
Set<E> set = new HashSet<E>();
 - 동일 객체 및 동등 객체는 중복 저장하지 앟ㄴ음
 - 동등객체 판단 방법 : 
 hashCode() 리턴값과 equals() 리턴값이 모두 같아야 동등 객체
 
TreeSet
 - 동일 객체 및 동등 객체는 중복 저장하지 않음
 - 정렬도어 조회
 - SortedSet 구현 클래스

Iterator
 - 컬렉션 클래스에 저장된 데이터를 접근하는데 사용되는 인터페이스
 - hasNext(), Next(), remove() 


Enumeration
 - Iterator 인터페이스의 구버전
 - Collection 프레임워크 이전에 사용했던 인터페이스
 - Vector, HashTable 클래스의 객체만 Enumeration 객체로 변환 가능
 - hasMoreElement(), nextElement()
 
ListIterator
 - Iterator 인터페이스의 하위 인터페이스
 - 양방향 조회 가능
 
Map
 - 키(key), 값(value)으로 구성된 객체 저장(Map.Entry 타입)
 - 키와 값은 모두 객체
 - 키는 중복될 수 없지만 값은 중복 저장 가능 
 - methods...
 
Properties
 - Hashtable 클래스의 하위 클래스
 - 단, key와 value가 모두 String인 Map 객체
 - key와 value가 모두 string이므로 제네릭 표현은 사용 안함

Stack
 - Vector 클래스의 하위 클래스
 - LIFO 구조

Queue
 - JDK 5.0 이후에 Collection 프레임워크에 추가된 인터페이스
 - FIFO 구조


 
 
 
